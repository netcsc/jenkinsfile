node {
    def dockerImage

    stage('Clone repository') {
        /* checkout sourcecode into current workspace */
        checkout scm
    }

    stage('Build image') {
        /* This builds the actual image. DOCKER_IMAGE_NAME is image name we pass in
         * and DOCKERFILE_PATH is the path to specific Dockerfile */

        dockerImage = docker.build("${env.DOCKER_IMAGE_NAME}", "${DOCKERFILE_PATH}")
    }

    stage('Test image') {
        /* Run echo to make sure image is ok to start */

        dockerImage.inside {
            sh 'echo "Tests passed"'
        }
    }

    stage('Push image') {
        /* Push the image with two tags:
         * First, the incremental build number from Jenkins
         * Second, the 'latest' tag. */
        docker.withRegistry('https://dockerhub.io') {
            dockerImage.push("${env.BUILD_NUMBER}")
            dockerImage.push("latest")
        }
    }

    stage('Dangling Containers') {
      /* cleanup dangling containers */
      sh 'docker ps -q -f status=exited | xargs --no-run-if-empty docker rm'
    }

    stage('Dangling Images') {
      /* cleanup dangling docker images */
      sh 'docker images -q -f dangling=true | xargs --no-run-if-empty docker rmi'
    }
}